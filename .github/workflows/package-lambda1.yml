on:
  pull_request:
    types: [closed]
    branches:
      - 'main'
    paths:
      - 'lambdas/lambda1/CHANGELOG.md'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CURRENT_HASH: ${{ github.sha }}

name: Staging Release
jobs:
  extract_version:
    if: github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release-please--branches--main--components--')
    runs-on: ubuntu-latest
    name: Extract Version
    steps:
      - uses: actions/checkout@v3
      - name: Read version from package.json
        id: package_version
        run: |
          JSON_STRING="$(cat lambdas/lambda1/package.json)"
          echo "PACKAGE_JSON<<EOF" >> $GITHUB_ENV
          echo "$JSON_STRING" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Set output from JSON
        run: echo "::set-output name=version::$(echo '${{ fromJson(env.PACKAGE_JSON).version }}')"
        id: json
      - name: Print version
        run: echo "Extracted version is ${{ steps.json.outputs.version }}"

  publish_release:
    if: github.event.pull_request.merged == true && needs.create_release.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    needs: extract_version
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta-secret-rotation
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/test-lambda-1
      - name: Build and push Docker image (Secret Rotation Function)
        uses: docker/build-push-action@v5
        with:
          context: ./lambdas/lambda1
          file: ./lambdas/lambda1/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/test-lambda-1:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/test-lambda-1:${{ env.CURRENT_HASH }}
          labels: ${{ steps.meta-secret-rotation.outputs.labels }}
          build-args: |
            GITHUB_PACKAGE_ACCESS_TOKEN=${{ secrets.GH_PACKAGE_ACCESS_TOKEN }}